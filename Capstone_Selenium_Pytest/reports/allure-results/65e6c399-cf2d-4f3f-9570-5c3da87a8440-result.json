{"name": "test_end_to_end_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x83fe83+66515]\n\tGetHandleVerifier [0x0x83fec4+66580]\n\t(No symbol) [0x0x62dc48]\n\t(No symbol) [0x0x678704]\n\t(No symbol) [0x0x678aab]\n\t(No symbol) [0x0x6bf482]\n\t(No symbol) [0x0x69b214]\n\t(No symbol) [0x0x6bcba7]\n\t(No symbol) [0x0x69afc6]\n\t(No symbol) [0x0x66c2ca]\n\t(No symbol) [0x0x66d154]\n\tGetHandleVerifier [0x0xa973b3+2521347]\n\tGetHandleVerifier [0x0xa92333+2500739]\n\tGetHandleVerifier [0x0x867cd4+229924]\n\tGetHandleVerifier [0x0x858238+165768]\n\tGetHandleVerifier [0x0x85eced+193085]\n\tGetHandleVerifier [0x0x848198+100072]\n\tGetHandleVerifier [0x0x848330+100480]\n\tGetHandleVerifier [0x0x8325ea+11066]\n\tBaseThreadInitThunk [0x0x75cd5d49+25]\n\tRtlInitializeExceptionChain [0x0x770dd6db+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x770dd661+561]", "trace": "self = <testCases.test_003_checkout_flow.Test_003_Checkout object at 0x000001270A0AA490>\n\n    @pytest.mark.regression\n    def test_end_to_end_checkout(self):\n        self.logger.info(\"**** Starting Test_003_Checkout End-to-End Test ****\")\n    \n        # 1. Login\n        self.driver.get(self.baseURL)\n        self.login_page = LoginPage(self.driver)\n        self.login_page.set_username(self.username)\n        self.login_page.set_password(self.password)\n        self.login_page.click_login()\n    \n        # 2. Add item to cart\n        self.inventory_page = InventoryPage(self.driver)\n        self.inventory_page.add_backpack_to_cart()\n        self.inventory_page.click_shopping_cart()\n    \n        # 3. Go to checkout\n        self.cart_page = CartPage(self.driver)\n        self.cart_page.click_checkout()\n    \n        # 4. Enter checkout info\n        self.checkout_one = CheckoutStepOnePage(self.driver)\n        self.checkout_one.enter_checkout_info(\"John\", \"Doe\", \"12345\")\n        self.checkout_one.click_continue()\n    \n        # --- DEBUGGING STEP ---\n        # We will now pause for 10 seconds to see what page we are on\n        print(f\"Current URL before failing: {self.driver.current_url}\")\n        time.sleep(10)\n    \n        # 5. Finish checkout and assert\n        self.checkout_two = CheckoutStepTwoPage(self.driver)\n>       total_price = self.checkout_two.get_total_price()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntestCases\\test_003_checkout_flow.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\CheckoutStepTwoPage.py:16: in get_total_price\n    return self.get_element_text(self.TOTAL_LABEL)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npageObjects\\BasePage.py:30: in get_element_text\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(by_locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"08b8f2135f3f9499348e89046fee5e64\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001270A1F1EE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x83fe83+66515]\nE       \tGetHandleVerifier [0x0x83fec4+66580]\nE       \t(No symbol) [0x0x62dc48]\nE       \t(No symbol) [0x0x678704]\nE       \t(No symbol) [0x0x678aab]\nE       \t(No symbol) [0x0x6bf482]\nE       \t(No symbol) [0x0x69b214]\nE       \t(No symbol) [0x0x6bcba7]\nE       \t(No symbol) [0x0x69afc6]\nE       \t(No symbol) [0x0x66c2ca]\nE       \t(No symbol) [0x0x66d154]\nE       \tGetHandleVerifier [0x0xa973b3+2521347]\nE       \tGetHandleVerifier [0x0xa92333+2500739]\nE       \tGetHandleVerifier [0x0x867cd4+229924]\nE       \tGetHandleVerifier [0x0x858238+165768]\nE       \tGetHandleVerifier [0x0x85eced+193085]\nE       \tGetHandleVerifier [0x0x848198+100072]\nE       \tGetHandleVerifier [0x0x848330+100480]\nE       \tGetHandleVerifier [0x0x8325ea+11066]\nE       \tBaseThreadInitThunk [0x0x75cd5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x770dd6db+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x770dd661+561]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "screenshot_on_failure", "source": "aec0148b-7abb-4f43-b1d3-7b7e683d4689-attachment.png", "type": "image/png"}, {"name": "log", "source": "c7082219-5234-4260-b4f8-47fea342a85c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "39e82eca-6a14-451c-92a6-88c4237bc42d-attachment.txt", "type": "text/plain"}], "start": 1760813053977, "stop": 1760813071212, "uuid": "21985118-ec73-4759-a6e3-8a11c3191dc1", "historyId": "46e885d65e2524c8e761966d320035c3", "testCaseId": "46e885d65e2524c8e761966d320035c3", "fullName": "testCases.test_003_checkout_flow.Test_003_Checkout#test_end_to_end_checkout", "labels": [{"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_003_checkout_flow"}, {"name": "subSuite", "value": "Test_003_Checkout"}, {"name": "host", "value": "ASCENDI-S70S5SL"}, {"name": "thread", "value": "13216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_003_checkout_flow"}], "titlePath": ["testCases", "test_003_checkout_flow.py", "Test_003_Checkout"]}