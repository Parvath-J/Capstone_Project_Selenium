{"name": "test_end_to_end_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff75986e9e5+80021]\n\tGetHandleVerifier [0x0x7ff75986ea40+80112]\n\t(No symbol) [0x0x7ff7595f060f]\n\t(No symbol) [0x0x7ff759648854]\n\t(No symbol) [0x0x7ff759648b1c]\n\t(No symbol) [0x0x7ff75969c927]\n\t(No symbol) [0x0x7ff75967126f]\n\t(No symbol) [0x0x7ff75969968a]\n\t(No symbol) [0x0x7ff759671003]\n\t(No symbol) [0x0x7ff7596395d1]\n\t(No symbol) [0x0x7ff75963a3f3]\n\tGetHandleVerifier [0x0x7ff759b2dd8d+2960445]\n\tGetHandleVerifier [0x0x7ff759b2804a+2936570]\n\tGetHandleVerifier [0x0x7ff759b48a87+3070263]\n\tGetHandleVerifier [0x0x7ff7598884ce+185214]\n\tGetHandleVerifier [0x0x7ff75988ff1f+216527]\n\tGetHandleVerifier [0x0x7ff759877c24+117460]\n\tGetHandleVerifier [0x0x7ff759877ddf+117903]\n\tGetHandleVerifier [0x0x7ff75985dcb8+11112]\n\tBaseThreadInitThunk [0x0x7ffa3871e8d7+23]\n\tRtlUserThreadStart [0x0x7ffa3950c53c+44]", "trace": "self = <testCases.test_003_checkout_flow.Test_003_Checkout object at 0x00000246BD8E7250>\n\n    @pytest.mark.regression\n    def test_end_to_end_checkout(self):\n        self.logger.info(\"**** Starting Test_003_Checkout End-to-End Test ****\")\n    \n        # 1. Login\n        self.driver.get(self.baseURL)\n        self.login_page = LoginPage(self.driver)\n        self.login_page.set_username(self.username)\n        self.login_page.set_password(self.password)\n        self.login_page.click_login()\n    \n        # 2. Add item to cart\n        self.inventory_page = InventoryPage(self.driver)\n        self.inventory_page.add_backpack_to_cart()\n        self.inventory_page.click_shopping_cart()\n    \n        # 3. Go to checkout\n        self.cart_page = CartPage(self.driver)\n        self.cart_page.click_checkout()\n    \n        # 4. Enter checkout info\n        self.checkout_one = CheckoutStepOnePage(self.driver)\n        self.checkout_one.enter_checkout_info(\"John\", \"Doe\", \"12345\")\n        self.checkout_one.click_continue()\n    \n        # --- DEBUGGING STEP REMOVED ---\n    \n        # 5. Finish checkout and assert\n        self.checkout_two = CheckoutStepTwoPage(self.driver)\n>       total_price = self.checkout_two.get_total_price()\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntestCases\\test_003_checkout_flow.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\CheckoutStepTwoPage.py:16: in get_total_price\n    return self.get_element_text(self.TOTAL_LABEL)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npageObjects\\BasePage.py:34: in get_element_text\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(by_locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fac322527b5b1f73017b5ab93aea6c38\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000246BE979800>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff75986e9e5+80021]\nE       \tGetHandleVerifier [0x0x7ff75986ea40+80112]\nE       \t(No symbol) [0x0x7ff7595f060f]\nE       \t(No symbol) [0x0x7ff759648854]\nE       \t(No symbol) [0x0x7ff759648b1c]\nE       \t(No symbol) [0x0x7ff75969c927]\nE       \t(No symbol) [0x0x7ff75967126f]\nE       \t(No symbol) [0x0x7ff75969968a]\nE       \t(No symbol) [0x0x7ff759671003]\nE       \t(No symbol) [0x0x7ff7596395d1]\nE       \t(No symbol) [0x0x7ff75963a3f3]\nE       \tGetHandleVerifier [0x0x7ff759b2dd8d+2960445]\nE       \tGetHandleVerifier [0x0x7ff759b2804a+2936570]\nE       \tGetHandleVerifier [0x0x7ff759b48a87+3070263]\nE       \tGetHandleVerifier [0x0x7ff7598884ce+185214]\nE       \tGetHandleVerifier [0x0x7ff75988ff1f+216527]\nE       \tGetHandleVerifier [0x0x7ff759877c24+117460]\nE       \tGetHandleVerifier [0x0x7ff759877ddf+117903]\nE       \tGetHandleVerifier [0x0x7ff75985dcb8+11112]\nE       \tBaseThreadInitThunk [0x0x7ffa3871e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffa3950c53c+44]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "screenshot_on_failure", "source": "a7e86dda-b77d-444a-b9cf-acc255310b32-attachment.png", "type": "image/png"}, {"name": "log", "source": "0e121325-37f9-4870-bd32-630665e2a6eb-attachment.txt", "type": "text/plain"}], "start": 1761067687851, "stop": 1761067704095, "uuid": "b96c64d7-3dd9-4447-bd1b-673c4946da44", "historyId": "46e885d65e2524c8e761966d320035c3", "testCaseId": "46e885d65e2524c8e761966d320035c3", "fullName": "testCases.test_003_checkout_flow.Test_003_Checkout#test_end_to_end_checkout", "labels": [{"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_003_checkout_flow"}, {"name": "subSuite", "value": "Test_003_Checkout"}, {"name": "host", "value": "ASCENDI-S70S5SL"}, {"name": "thread", "value": "18100-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_003_checkout_flow"}], "titlePath": ["testCases", "test_003_checkout_flow.py", "Test_003_Checkout"]}